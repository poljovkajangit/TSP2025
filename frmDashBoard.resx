<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>